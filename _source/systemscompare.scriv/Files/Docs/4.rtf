{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 Csound, as well as MUSIC-11, was originally developed in MIT by Barry Vercoe in 1986.  Vercoe followed MUSIC-N model initiated by Max Mathews at the Bell Labs.\
\
Just like other MUSIC-N system, Csound devided sound synthesizing process into two modules: instrument and score.  Csound system also saves these two modules into two different (.orc and .sco) files for composers to be able to reuse and try different combinations.  In Csound unified file code (.csd), those two parts of modules are tagged within a markup language syntax.\
\
The major strength of Csound is it is well integrated with major developing programming languages today such as C, C++, Python, Java, Lisp, and etc..  And the whole Csound programming environment can be run on the mobile system.\
\
Early Csound does not support real time sound processing.  A music composition has to be rendered before it can be played back.  However, start from Csound 5 released in 2006, Csound starts to support MIDI and OSC as signal input to make real time performance or interactive performances possible.  Furthermore, in Csound 6 released in 2013, instruments and orchestras can be re-compiled at any time during a running performance.  It makes live coding on Csound possible.\
\
Nevertheless, even though Csound has started supporting live performance, it does not provide functions that created GUI controls.  Therefore users has to depend on other environments for GUI controlling such as Max/MSP or Python. \
\
}